package routines;

import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import java.lang.reflect.Method;

public class DQ_Test_Copy {

	@Test(dataProvider="DQ")
	public void isNullOrBlank(String value,Boolean expctResult)
	{
		Assert.assertEquals(DQ.isNullOrBlank(value), expctResult);
	}
	
	@Test(dataProvider="DQ")
	public void isCorrectGSR_Ref(String value,Boolean expctResult)
	{
		Assert.assertEquals(DQ.isCorrectGSR_Ref(value), expctResult);
	}
	
	@Test(dataProvider="DQ")
	public void isMicrosoftEmailDomain(String value,Boolean expctResult)
	{
		Assert.assertEquals(DQ.isMicrosoftEmailDomain(value), expctResult);
	}
	
	@Test(dataProvider="DQ")
	public void toJavaPath(String value,String expctResult)
	{
		Assert.assertEquals(PATH.toJavaPath(value), expctResult);
	}
	
	
	@DataProvider(name="DQ")
	public Object [][] getData(Method name)
	{
		
		if(name.getName().equalsIgnoreCase("isNullOrBlank"))
		{
			Object [][] data=new Object[6][2];
			
			data[0][0]="";
			data[0][1]=true;
			
			data[1][0]=null;
			data[1][1]=true;
			
			data[2][0]=null;
			data[2][1]=true;
			
			data[3][0]="null";
			data[3][1]=false;
			
			data[4][0]=" ";
			data[4][1]=false;
			
			data[5][0]="testValue";
			data[5][1]=false;
			
			return data;
			
		}
		else if(name.getName().equalsIgnoreCase("isCorrectGSR_Ref"))
		{
			Object [][] data=new Object[6][2];
		
			data[0][0]="12345-abcd-abcde";
			data[0][1]=false;
			
			data[1][0]="12345-1234-12345";
			data[1][1]=true;
			
			data[2][0]="abcde-ab-12345";
			data[2][1]=false;
			
			data[3][0]="abcde-abcd-12345";
			data[3][1]=true;
			
			data[4][0]="ASTFG-rowk-39402";
			data[4][1]=true;
			
			data[5][0]=null;
			data[5][1]=false;
			
			return data;
			
		}
		else if(name.getName().equalsIgnoreCase("isMicrosoftEmailDomain"))
		{
			Object [][] data=new Object[6][2];
			
			data[0][0]="vira.pat@gmail.com";
			data[0][1]=false;
			
			data[1][0]="34@vodafone.com";
			data[1][1]=false;
			
			data[2][0]="user1@windowslive.com";
			data[2][1]=true;
			
			data[3][0]="user2@hotmail.com";
			data[3][1]=true;
			
			data[4][0]="";
			data[4][1]=false;
			
			data[5][0]=null;
			data[5][1]=false;
			
			return data;
		}
		else if(name.getName().equalsIgnoreCase("toJavaPath"))
		{
			Object [][] data=new Object[6][2];
			
			data[0][0]="C:\\Program Files\\Java\\jdk1.8.0_65";
			data[0][1]="C:/Program Files/Java/jdk1.8.0_65";
			
			data[1][0]="C:\\Program Files/Java\\jdk1.8.0_65";
			data[1][1]="C:/Program Files/Java/jdk1.8.0_65";
			
			data[2][0]="C:\\Program Files/Java/jdk1.8.0_65";
			data[2][1]="C:/Program Files/Java/jdk1.8.0_65";;
			
			data[3][0]="a/b/c";
			data[3][1]="a/b/c";
			
			data[4][0]="";
			data[4][1]="";
			
			data[5][0]=null;
			data[5][1]="";
			
			return data;
		}
		else return null;
		
		
	}
}
